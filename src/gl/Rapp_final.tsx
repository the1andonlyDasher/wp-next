/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/rapp_final.glb 
*/

import React, { useEffect, useRef } from 'react'
import { Stage, useAspect, useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'

export function Model(props: any) {
  const { size } = useThree();
  const [w, h] = useAspect(size.width, size.height)
  const { nodes, materials }: any = useGLTF('/rapp_final.glb')
  const group = useRef<any>()

  // useFrame(() => group.current.lookAt(10, 2, 0))

  useEffect(() => {
    Object.values(materials).map((item: any) => {
      if (!Object.values(materials).find((item: any) => item.name === "cap")) {
        console.log(item)
      }
    })
  }, [materials])
  return (
    <Stage adjustCamera={Math.max(0.5, Math.min(size.width / 500, 1.2))} intensity={0.5} shadows="contact">
      <group ref={group} scale={Math.min(0.3, Math.max(w, 10))} {...props} dispose={null}>
        <mesh geometry={nodes.Cylinder.geometry} material={materials.glass} />
        <mesh geometry={nodes.Cylinder002.geometry} material={materials.label_bottom_lime} rotation={[0, 0.451, 0]} scale={1.001} />
        <mesh geometry={nodes.Cylinder001.geometry} material={materials.cap} position={[0, 2.97, 0]} scale={[0.329, 0.219, 0.329]} />
        <mesh geometry={nodes.Plane.geometry} material={materials.cap} position={[0, 2.928, 0]} scale={[0.076, 0.029, 0.076]} />
        <mesh geometry={nodes.Circle.geometry} material={materials.cap} position={[0, 3.127, 0]} scale={[1, 1.237, 1]} />
        <mesh geometry={nodes.Circle006.geometry} material={materials.cap} position={[-0.248, 2.801, -0.23]} />
        <mesh geometry={nodes.Cylinder003.geometry} material={materials.label_top_lime} position={[0, 0.02, 0]} scale={0.994} />
      </group>
    </Stage>
  )
}

useGLTF.preload('/rapp_final.glb')
